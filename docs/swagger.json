{
    "swagger": "2.0",
    "info": {
        "contact": {},
        "license": {}
    },
    "paths": {
        "/auth/": {
            "post": {
                "description": "Authenticate an user with given information, to get a jwt token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Authenticate an user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username or Email",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Valid information, authenticated",
                        "schema": {
                            "$ref": "#/definitions/controllers.AuthenticatedResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong format or invalid information",
                        "schema": {
                            "$ref": "#/definitions/controllers.EmptyResponse"
                        }
                    }
                }
            }
        },
        "/register/": {
            "post": {
                "description": "Register an user with given information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Register an user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "RSA 2048 PublicKey",
                        "name": "publicKey",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nickname",
                        "name": "nickname",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Bio",
                        "name": "bio",
                        "in": "path"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User account created",
                        "schema": {
                            "$ref": "#/definitions/controllers.EmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Normal Form error, like username duplicate",
                        "schema": {
                            "$ref": "#/definitions/controllers.EmailExistsResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.AuthenticatedResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "controllers.EmailExistsResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "controllers.EmptyResponse": {
            "type": "object"
        }
    }
}